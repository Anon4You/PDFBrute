#!/bin/python
import os,pikepdf,random,itertools,threading,os.path,time,requests,sys
from tqdm import tqdm

logo="""\a\a\33[34;1m
▛▀▖▛▀▖▛▀▘▌        ▐
▙▄▘▌ ▌▙▄ ▛▀▖▙▀▖▌ ▌▜▀ ▞▀▖
▌  ▌ ▌▌  ▌ ▌▌  ▌ ▌▐ ▖▛▀
▘  ▀▀ ▘  ▀▀ ▘  ▝▀▘ ▀ ▝▀▘\33[0;4m©Alienkrishn\33[0;1m

[1] Use Default Password
[2] Use Custom Password
[3] About The Tool
[4] Message me
[5] Exit

"""
dlogo="""\a\a\33[32;1m
▛▀▖   ▗▀▖      ▜▐  ▛▀▖      ▐
▌ ▌▞▀▖▐  ▝▀▖▌ ▌▐▜▀ ▙▄▘▙▀▖▌ ▌▜▀ ▞▀▖
▌ ▌▛▀ ▜▀ ▞▀▌▌ ▌▐▐ ▖▌ ▌▌  ▌ ▌▐ ▖▛▀
▀▀ ▝▀▘▐  ▝▀▘▝▀▘ ▘▀ ▀▀ ▘  ▝▀▘ ▀ ▝▀▘

Author \33[32m: \33[0mBishal singh

A simple and easy pdf bruteforcing tool
for termux....
"""

clogo="""\a\a\33[1;36m
▞▀▖      ▐         ▛▀▖      ▐
▌  ▌ ▌▞▀▘▜▀ ▞▀▖▛▚▀▖▙▄▘▙▀▖▌ ▌▜▀ ▞▀▖
▌ ▖▌ ▌▝▀▖▐ ▖▌ ▌▌▐ ▌▌ ▌▌  ▌ ▌▐ ▖▛▀
▝▀ ▝▀▘▀▀  ▀ ▝▀ ▘▝ ▘▀▀ ▘  ▝▀▘ ▀ ▝▀▘\33[0;1m©Alienkrishn

\33[32;1mAuthor \33[0m: \33[1mBishal Singh

Follow me on Instagram \33[4;36m@Alienkshn\33[0m

PDF decrypter with custom
password list V 1.0
"""

os.system("clear")
print(logo)
stop = False

def muter():

    for c in itertools.cycle(['- ','\ ','| ','/ ']):
        if stop:
            break
        sys.stdout.write("\r\033[1;32m[+]\033[1;31m Exiting\033[1;37m....." + c)
        sys.stdout.flush()
        time.sleep(0.04)
    sys.stdout.write("\r\033[1;32m[+] \033[1;0mThanks for using this tool, Byeee ...\n")
t = threading.Thread(target=muter)
k = input("\033[1;32m[*]\033[0;1m Choose\033[1;32m : ")

def default():
  os.system("clear")
  print(dlogo)
  ipdf=input("Enter PDF path: ")
  passwords = [ line.strip() for line in open(".pass.txt") ]
  print("\33[36mCracking PDF with Default wordlist..\33[0m")
  for password in tqdm(passwords, "Decrypting "):
    try:
       with pikepdf.open(ipdf, password=password) as pdf:
         print("\n[+] Password found:\33[0m", password)
       break
    except pikepdf.PasswordError as e:
      continue

def custom():
  os.system("clear")
  print(clogo)
  ipdf=input("Enter PDF path: ")
  pswd=input("Enter WordList Path: ")
  passwords = [ line.strip() for line in open(pswd) ]
  print("\33[36mCracking PDF with Custom wordlist..\33[0m")
  for password in tqdm(passwords, "Decrypting "):
    try:
       with pikepdf.open(ipdf, password=password) as pdf:
         print("\n\a\a\33[32;1m[+] Password found:\33[0m", password)
       break
    except pikepdf.PasswordError as e:
      continue

if k=='0':
  t.start()
  time.sleep(1)
  stop = True
  os.system("cd")
  sys.exit(0)
elif k=='1':
  default()
elif k=='2':
  custom()
else:
  os.system("pdfbrute")
